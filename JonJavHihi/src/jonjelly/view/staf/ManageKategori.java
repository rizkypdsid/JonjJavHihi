/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jonjelly.view.staf;

import config.Database;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jonjelly.controllers.Staf;

/**
 *
 * @author mrpds
 */
public class ManageKategori extends javax.swing.JFrame {
private DefaultTableModel ModelCategory;
    /**
     * Creates new form ManageKategori
     */
    public ManageKategori() {
        initComponents();
        setTitle("CATEGORY MANAGE");
        System.out.println("Selamat Datang Di Halaman ManageKategori Staf Jon!");
        this.setLocationRelativeTo(this);
        
        //TableMenu
        ModelCategory = new DefaultTableModel ( );
        TableCategory.setModel(ModelCategory);
        ModelCategory.addColumn("ID");
        ModelCategory.addColumn("NAME");
        TableCategory.getColumnModel().getColumn(0).setPreferredWidth(1);
        TableCategory.getColumnModel().getColumn(1).setPreferredWidth(150);
        getCategory();
        
        InputIdCategory.setEnabled(false);
        BtnUbah.setEnabled(false);
        BtnHapus.setEnabled(false);
    }
    
    public void FilterHuruf(KeyEvent a){
       if(Character.isDigit(a.getKeyChar())){
           a.consume();
           JOptionPane.showMessageDialog(null, "HARAP MASUKAN HURUF SAJA!", "NOTICE VALIDATION", JOptionPane.WARNING_MESSAGE);
           InputNamaCategory.setText("");
       }
   }
    
   // Ambil Data Category
    public void getCategory(){
     //menghapus isi table TabelUser
        ModelCategory.getDataVector().removeAllElements();
        ModelCategory.fireTableDataChanged();

        try{
            Statement stat = (Statement) Database.getKoneksi().createStatement();
            String sql        = "SELECT * FROM kategori ORDER BY id_kategori ASC";
            ResultSet res   = stat.executeQuery(sql);
            while(res.next() ){
                 Object[ ] obj = new Object[2];
                 obj[0] = res.getString("id_kategori");
                 obj[1] = res.getString("nama_kategori");

                 ModelCategory.addRow(obj);
             }
         }catch(SQLException err){
                System.out.println("Error Load Data Category");
         }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        icon_header = new javax.swing.JLabel();
        TagPage = new javax.swing.JLabel();
        BtnBack = new javax.swing.JLabel();
        LnamaCategory = new javax.swing.JLabel();
        Lcategory = new javax.swing.JLabel();
        InputSearch = new javax.swing.JTextField();
        InputIdCategory = new javax.swing.JTextField();
        InputNamaCategory = new javax.swing.JTextField();
        BtnTambah = new javax.swing.JButton();
        BtnUbah = new javax.swing.JButton();
        BtnSearch = new javax.swing.JToggleButton();
        BtnHapus = new javax.swing.JButton();
        BtnReset = new javax.swing.JButton();
        BtnBackManageMenu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableCategory = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setBackground(new java.awt.Color(45, 45, 45));

        icon_header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/brand/header.png"))); // NOI18N

        TagPage.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        TagPage.setForeground(new java.awt.Color(190, 190, 190));
        TagPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button/tag_page.png"))); // NOI18N
        TagPage.setText("Manage Category");

        BtnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button/back_header.png"))); // NOI18N
        BtnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnBackMouseClicked(evt);
            }
        });

        LnamaCategory.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        LnamaCategory.setForeground(new java.awt.Color(190, 190, 190));
        LnamaCategory.setText("CATEGORY NAME");

        Lcategory.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Lcategory.setForeground(new java.awt.Color(190, 190, 190));
        Lcategory.setText("ID CATEGORY");

        InputSearch.setBackground(new java.awt.Color(45, 45, 45));
        InputSearch.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        InputSearch.setForeground(new java.awt.Color(102, 102, 102));
        InputSearch.setText("please input your category.....");
        InputSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InputSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                InputSearchMouseEntered(evt);
            }
        });
        InputSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InputSearchKeyReleased(evt);
            }
        });

        InputIdCategory.setEditable(false);
        InputIdCategory.setBackground(new java.awt.Color(45, 45, 45));
        InputIdCategory.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        InputIdCategory.setForeground(new java.awt.Color(190, 190, 190));

        InputNamaCategory.setBackground(new java.awt.Color(45, 45, 45));
        InputNamaCategory.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        InputNamaCategory.setForeground(new java.awt.Color(190, 190, 190));
        InputNamaCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InputNamaCategoryKeyReleased(evt);
            }
        });

        BtnTambah.setBackground(new java.awt.Color(91, 59, 255));
        BtnTambah.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BtnTambah.setForeground(new java.awt.Color(255, 255, 255));
        BtnTambah.setText("TAMBAH");
        BtnTambah.setBorder(null);
        BtnTambah.setBorderPainted(false);
        BtnTambah.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTambahActionPerformed(evt);
            }
        });

        BtnUbah.setBackground(new java.awt.Color(240, 123, 63));
        BtnUbah.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BtnUbah.setForeground(new java.awt.Color(255, 255, 255));
        BtnUbah.setText("UBAH");
        BtnUbah.setBorder(null);
        BtnUbah.setBorderPainted(false);
        BtnUbah.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUbahActionPerformed(evt);
            }
        });

        BtnSearch.setBackground(new java.awt.Color(54, 53, 53));
        BtnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button/search.png"))); // NOI18N
        BtnSearch.setBorder(null);
        BtnSearch.setBorderPainted(false);

        BtnHapus.setBackground(new java.awt.Color(234, 84, 85));
        BtnHapus.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BtnHapus.setForeground(new java.awt.Color(255, 255, 255));
        BtnHapus.setText("HAPUS");
        BtnHapus.setBorder(null);
        BtnHapus.setBorderPainted(false);
        BtnHapus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });

        BtnReset.setBackground(new java.awt.Color(102, 102, 102));
        BtnReset.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BtnReset.setForeground(new java.awt.Color(255, 255, 255));
        BtnReset.setText("RESET");
        BtnReset.setBorder(null);
        BtnReset.setBorderPainted(false);
        BtnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnResetMouseClicked(evt);
            }
        });

        BtnBackManageMenu.setBackground(new java.awt.Color(0, 0, 204));
        BtnBackManageMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BtnBackManageMenu.setForeground(new java.awt.Color(255, 255, 255));
        BtnBackManageMenu.setText("BACK TO MANAGE MENU");
        BtnBackManageMenu.setBorder(null);
        BtnBackManageMenu.setBorderPainted(false);
        BtnBackManageMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnBackManageMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackManageMenuActionPerformed(evt);
            }
        });

        TableCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableCategoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableCategory);

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(TagPage)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(icon_header)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnBack))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(BtnBackManageMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BackgroundLayout.createSequentialGroup()
                                            .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(BtnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(BtnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(BtnUbah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(BtnReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(InputIdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Lcategory))
                                .addGap(26, 26, 26)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LnamaCategory)
                                    .addComponent(InputNamaCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                        .addComponent(InputSearch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BtnSearch))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(22, 22, 22))))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(icon_header)
                    .addComponent(BtnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BtnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InputSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LnamaCategory)
                            .addComponent(Lcategory))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InputNamaCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InputIdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BtnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(BtnBackManageMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(TagPage)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Button Back Header
    private void BtnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnBackMouseClicked
        // TODO add your handling code here:
        System.out.println("Kita Balik Ke Controllers Staf Jon!");
        Staf st=new Staf();
        st.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setVisible(false);
        st.setVisible(true);
    }//GEN-LAST:event_BtnBackMouseClicked

    // Input Search Menu
    private void InputSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputSearchKeyReleased
        // TODO add your handling code here:
        ModelCategory.getDataVector().removeAllElements();
        ModelCategory.fireTableDataChanged();

        try {
            Connection c = Database.getKoneksi();
            Statement s = c.createStatement();
            String srch = " SELECT * FROM kategori "
                        + "WHERE id_kategori LIKE '%" + InputSearch.getText()
                        + "%'OR nama_kategori LIKE '%" + InputSearch.getText() + "%'";
            ResultSet r = s.executeQuery(srch);
            while (r.next()) {
                Object[ ] SrchMenu = new Object[2];
                
                SrchMenu[0] = r.getString("id_kategori");
                SrchMenu[1] = r.getString("nama_kategori");
                
                ModelCategory.addRow(SrchMenu);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi Error");
        }
    }//GEN-LAST:event_InputSearchKeyReleased

    // Replace ValueInput Search Menu
    private void InputSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InputSearchMouseClicked
        // TODO add your handling code here:
        InputSearch.setText("");
    }//GEN-LAST:event_InputSearchMouseClicked

    // Button Created Category
    private void BtnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTambahActionPerformed
        // TODO add your handling code here:
        if( InputNamaCategory.getText().equals("") ){
                JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "JonJelly", JOptionPane.INFORMATION_MESSAGE);
            }else{
                String namamenu = InputNamaCategory.getText();
                try {
                    Connection c = Database.getKoneksi();

                    String sql = "INSERT INTO kategori VALUES (?, ?)";
                    PreparedStatement p = c.prepareStatement(sql);
                    p.setString(1, null);   
                    p.setString(2, namamenu);
                    p.executeUpdate();
                    p.close();
                } catch (SQLException e) {
                    System.out.println("Terjadi Error");
                } finally {
                    getCategory();
                    InputNamaCategory.setText("");
                    JOptionPane.showMessageDialog(null, "Data berhasil tersimpan", "JonJelly", JOptionPane.INFORMATION_MESSAGE);
                }
            }
    }//GEN-LAST:event_BtnTambahActionPerformed

    // Button Reset
    private void BtnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnResetMouseClicked
        // TODO add your handling code here:
        getCategory();
        InputSearch.setText("please input your category.....");
        InputIdCategory.setText("");
        InputNamaCategory.setText("");
        BtnTambah.setEnabled(true);
        BtnUbah.setEnabled(false);
        BtnHapus.setEnabled(false);
    }//GEN-LAST:event_BtnResetMouseClicked

    // Table user event Click into to textfield
    private void TableCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableCategoryMouseClicked
        // TODO add your handling code here:
        int i = TableCategory.getSelectedRow();
        if (i == -1) {
            return;
        }
        String idmenu = (String) ModelCategory.getValueAt(i, 0);
        InputIdCategory.setText(idmenu);
        InputIdCategory.setEnabled(false);

        String namamenu = (String) ModelCategory.getValueAt(i, 1);
        InputNamaCategory.setText(namamenu);
        
        InputSearch.setText("please input your category.....");
        BtnTambah.setEnabled(false);
        BtnUbah.setEnabled(true);
        BtnHapus.setEnabled(true);
       
    }//GEN-LAST:event_TableCategoryMouseClicked

    // Button Update Menu
    private void BtnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUbahActionPerformed
        // TODO add your handling code here:
        if( 
            InputIdCategory.getText().equals("")||
            InputNamaCategory.getText().equals("") 
          ){
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "JonJelly", JOptionPane.WARNING_MESSAGE);
           }else{
                int i = TableCategory.getSelectedRow();
                if (i == -1) {
                    return;
                }
                String idmenu = (String) ModelCategory.getValueAt(i, 0);
                InputIdCategory.setText(idmenu);
                try {
                    Connection c = Database.getKoneksi();
                    String sql = "UPDATE kategori SET "
                                + "nama_kategori ='"+ InputNamaCategory.getText() +"' WHERE  id_kategori ='" + InputIdCategory.getText() + "'";
                    PreparedStatement p = c.prepareStatement(sql);
                    p.executeUpdate();
                    p.close();
                } catch (SQLException e) {
                    System.out.println("Terjadi Error update data kategori");
                } finally {
                    getCategory();
                    InputSearch.setText("please input your category.....");
                    InputIdCategory.setText("");
                    InputNamaCategory.setText("");
                    BtnTambah.setEnabled(true);
                    BtnUbah.setEnabled(false);
                    BtnHapus.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Data berhasil diubah", "JonJelly", JOptionPane.INFORMATION_MESSAGE);
                }
           }
    }//GEN-LAST:event_BtnUbahActionPerformed

    // Button Delete User
    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(null, "Do You want to DELETE MENU?", "DELETE MENU", JOptionPane.YES_NO_OPTION);
        switch (res) {
            case JOptionPane.YES_OPTION:
                if( InputIdCategory.getText().equals("")||
                    InputNamaCategory.getText().equals("") 
                   ){JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "JonJelly", JOptionPane.WARNING_MESSAGE);}
                else{
                    try {
                        String sql ="DELETE FROM kategori WHERE id_kategori='"+InputIdCategory.getText()+"'";
                        java.sql.Connection conn=(Connection)Database.getKoneksi();
                        java.sql.PreparedStatement pst=conn.prepareStatement(sql);
                        pst.execute();
                        JOptionPane.showMessageDialog(null, "berhasil di hapus!", "JonJelly", JOptionPane.INFORMATION_MESSAGE);
                        getCategory();
                        InputSearch.setText("please input your category.....");
                        InputIdCategory.setText("");
                        InputNamaCategory.setText("");
                        BtnTambah.setEnabled(true);
                        BtnUbah.setEnabled(false);
                        BtnHapus.setEnabled(false);
                    }catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                        }
                    }
            break;
            case JOptionPane.NO_OPTION:
                InputSearch.setText("please input your category.....");
                InputIdCategory.setText("");
                InputNamaCategory.setText("");
                BtnTambah.setEnabled(true);
                BtnUbah.setEnabled(false);
                BtnHapus.setEnabled(false);
            break;
        }
    }//GEN-LAST:event_BtnHapusActionPerformed

    // Btn Back to manage menu
    private void BtnBackManageMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackManageMenuActionPerformed
        // TODO add your handling code here:
        ManageItemMenu MenuManage=new ManageItemMenu();
        MenuManage.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setVisible(false);
        MenuManage.setVisible(true);
    }//GEN-LAST:event_BtnBackManageMenuActionPerformed

    // Textfield nama category
    private void InputNamaCategoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputNamaCategoryKeyReleased
        // TODO add your handling code here:
        FilterHuruf(evt);
    }//GEN-LAST:event_InputNamaCategoryKeyReleased

    // replace value search
    private void InputSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InputSearchMouseEntered
        // TODO add your handling code here:
        InputSearch.setText("");
    }//GEN-LAST:event_InputSearchMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageItemMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageItemMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageItemMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageItemMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            ManageKategori CategoryManage=new ManageKategori();
            CategoryManage.setExtendedState(JFrame.MAXIMIZED_BOTH);
            CategoryManage.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JLabel BtnBack;
    private javax.swing.JButton BtnBackManageMenu;
    private javax.swing.JButton BtnHapus;
    private javax.swing.JButton BtnReset;
    private javax.swing.JToggleButton BtnSearch;
    private javax.swing.JButton BtnTambah;
    private javax.swing.JButton BtnUbah;
    private javax.swing.JTextField InputIdCategory;
    private javax.swing.JTextField InputNamaCategory;
    private javax.swing.JTextField InputSearch;
    private javax.swing.JLabel Lcategory;
    private javax.swing.JLabel LnamaCategory;
    private javax.swing.JTable TableCategory;
    private javax.swing.JLabel TagPage;
    private javax.swing.JLabel icon_header;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
